// Generated by CoffeeScript 1.6.3
(function() {
  var voter_vote;

  this.voter_vote = voter_vote = (function() {
    function voter_vote(nameCandidateGroupsContainer) {
      var buttonGroup, divButtonGroupContainer;
      nameCandidateGroupsContainer = $(nameCandidateGroupsContainer);
      this.nameCandidateGroups = (function() {
        var _i, _len, _ref, _results;
        _ref = nameCandidateGroupsContainer.find(">div");
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          divButtonGroupContainer = _ref[_i];
          _results.push(buttonGroup = new window.NameCandidateGroup(divButtonGroupContainer));
        }
        return _results;
      })();
    }

    voter_vote.prototype.run = function() {
      var group, that, _i, _len, _ref, _results;
      that = this;
      _ref = this.nameCandidateGroups;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        group = _ref[_i];
        group.render();
        _results.push(group.actionButtonClick(function(event, nameCandidate) {
          return that.__handleActionButtonClicked(this, nameCandidate);
        }));
      }
      return _results;
    };

    voter_vote.prototype.__getCorrespondGroup = function(actionButton) {
      var cssName, group, _i, _len, _ref;
      actionButton = $(actionButton);
      _ref = this.nameCandidateGroups;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        group = _ref[_i];
        cssName = group.jQueryObj().data("action-button-class");
        if (actionButton.hasClass(cssName)) {
          return group;
        }
      }
    };

    voter_vote.prototype.__updateNameInDB = function(nameCandidate, score, cb) {
      var $nameCandidate, jqxhr, queryParams;
      $nameCandidate = nameCandidate.jQueryObj();
      queryParams = {
        id: $nameCandidate.data("id"),
        name: $nameCandidate.find(".name-candidate-text").text(),
        score: score
      };
      jqxhr = $.get(nameCandidate.jQueryObj().parent(".name-candidate-group").data("url"), queryParams);
      jqxhr.done(function(data) {
        $nameCandidate.attr("data-id", data._id);
        return cb(null, $nameCandidate);
      });
      return jqxhr.fail(function() {
        return cb("Error");
      });
    };

    voter_vote.prototype.__handleActionButtonClicked = function(actionButton, nameCandidate) {
      var score, targetGroup,
        _this = this;
      targetGroup = this.__getCorrespondGroup(actionButton);
      score = targetGroup.jQueryObj().data("score");
      return this.__updateNameInDB(nameCandidate, score, function(err) {
        if (err) {
          return alert('不明原因的错误');
        } else {
          return nameCandidate.moveToGroup(targetGroup);
        }
      });
    };

    return voter_vote;

  })();

}).call(this);
